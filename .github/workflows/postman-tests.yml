name: Postman API Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_DB: myshop
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      
      redis:
        image: redis:latest
        ports:
          - 6379:6379
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up JDK 21
      uses: actions/setup-java@v3
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: maven
    
    - name: List directory structure
      run: |
        echo "Repository structure:"
        find . -type d -not -path "*/\.*" | sort
        echo "All pom.xml files:"
        find . -name "pom.xml" | sort
        echo "Location of init.sql:"
        find . -name "init.sql" | sort
    
    - name: Initialize PostgreSQL database
      run: |
        # Verify init.sql exists
        ls -l Back-end/init.sql
        # Wait for PostgreSQL to be ready
        until pg_isready -h localhost -p 5432 -U postgres; do
          echo "Waiting for PostgreSQL to be ready..."
          sleep 2
        done
        # Execute init.sql to populate the database
        psql -h localhost -p 5432 -U postgres -d myshop -f Back-end/init.sql
      env:
        PGPASSWORD: postgres
    
    - name: Build and Test with Maven
      run: |
        cd Back-end
        mvn -B package
      env:
        SPRING_DATASOURCE_URL: jdbc:postgresql://localhost:5432/myshop
        SPRING_DATASOURCE_USERNAME: postgres
        SPRING_DATASOURCE_PASSWORD: postgres
        SECRET_KEY: ${{ secrets.SECRET_KEY }}
    
    - name: Install Newman
      run: npm install -g newman
    
    - name: Run Postman Tests
      run: |
        # List postman files to verify their location
        find . -path "*/postman/*.json" | sort
        
        # Run your application in the background for API testing
        cd Back-end
        java -jar target/*.jar &
        
        # Wait for your application to start
        sleep 30
        
        # Run Newman with the correct path
        newman run ./src/postman/collection.json
      env:
        SPRING_DATASOURCE_URL: jdbc:postgresql://localhost:5432/myshop
        SPRING_DATASOURCE_USERNAME: postgres
        SPRING_DATASOURCE_PASSWORD: postgres
        SPRING_DATA_REDIS_HOST: localhost
        SPRING_DATA_REDIS_PORT: 6379
        SECRET_KEY: ${{ secrets.SECRET_KEY }}
